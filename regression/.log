2023-07-04 11:27:29,166 [7021] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-04 11:27:29,167 [7021] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-04 11:27:29,167 [7021] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-04 11:27:29,168 [7021] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-04 11:27:29,168 [7021] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-04 11:27:29,168 [7021] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-04 14:14:06,137 [14436] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-04 14:14:06,137 [14436] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-04 14:14:06,137 [14436] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-04 14:14:06,138 [14436] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-04 14:14:06,138 [14436] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-04 14:14:06,138 [14436] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-04 16:49:37,495 [23909] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-04 16:49:37,495 [23909] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-04 16:49:37,495 [23909] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-04 16:49:37,496 [23909] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-04 16:49:37,496 [23909] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-04 16:49:37,496 [23909] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-04 22:05:17,512 [23909] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-04 22:05:17,512 [23909] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-04 22:05:17,512 [23909] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-04 22:05:17,514 [23909] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-04 22:05:17,514 [23909] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-04 22:05:17,514 [23909] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-04 23:42:01,005 [23909] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-04 23:42:01,005 [23909] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-04 23:42:01,005 [23909] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-04 23:42:01,007 [23909] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-04 23:42:01,008 [23909] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-04 23:42:01,008 [23909] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-05 01:03:10,959 [46834] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-05 01:03:10,959 [46834] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-05 01:03:10,959 [46834] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-05 01:03:10,960 [46834] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-05 01:03:10,960 [46834] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-05 01:03:10,960 [46834] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-05 10:12:46,040 [4516] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-05 10:12:46,040 [4516] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-05 10:12:46,040 [4516] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-05 10:12:46,041 [4516] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-05 10:12:46,041 [4516] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-05 10:12:46,041 [4516] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-05 10:52:27,520 [7981] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-05 10:52:27,520 [7981] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-05 10:52:27,520 [7981] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-05 10:52:27,522 [7981] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-05 10:52:27,522 [7981] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-05 10:52:27,522 [7981] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-05 10:57:12,789 [7981] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-07-05 10:57:12,813 [7981] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-07-05 10:57:33,520 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 10:57:33,520 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2023-07-05 10:57:33,521 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2023-07-05 10:57:33,522 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2023-07-05 10:57:33,522 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 10:57:35,560 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 10:57:35,560 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2023-07-05 10:57:35,561 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2023-07-05 10:57:35,561 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2023-07-05 10:57:35,561 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2023-07-05 10:57:35,562 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2023-07-05 10:57:35,563 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 10:57:35,566 [7981] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/numpy/__init__.py
2023-07-05 10:57:35,606 [7981] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/numpy/__init__.pyi
2023-07-05 10:58:22,552 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 10:58:22,553 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2023-07-05 10:58:22,553 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2023-07-05 10:58:22,554 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2023-07-05 10:58:22,555 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[2:2] new[2:3]
2023-07-05 10:58:22,556 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2023-07-05 10:58:22,557 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 10:58:31,624 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 10:58:31,625 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2023-07-05 10:58:31,626 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2023-07-05 10:58:31,627 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 10:58:31,627 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2023-07-05 10:58:31,629 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2023-07-05 10:58:31,629 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 10:58:31,646 [7981] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /usr/lib/python3.9/typing.py
2023-07-05 10:58:31,652 [7981] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-07-05 10:58:59,751 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 10:58:59,752 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2023-07-05 10:58:59,752 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2023-07-05 10:58:59,753 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 10:58:59,754 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2023-07-05 10:58:59,755 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2023-07-05 10:58:59,755 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:02:26,056 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:02:26,056 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2023-07-05 11:02:26,056 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2023-07-05 11:02:26,057 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:02:26,057 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2023-07-05 11:02:26,058 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2023-07-05 11:02:26,059 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:03:40,207 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:03:40,208 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 4
2023-07-05 11:03:40,208 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:3] new[1:4]
2023-07-05 11:03:40,210 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2023-07-05 11:03:40,210 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:05:22,199 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:05:22,199 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 6
2023-07-05 11:05:22,200 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2023-07-05 11:05:22,201 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 2 (to 2 in part parser)
2023-07-05 11:05:22,201 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2023-07-05 11:05:22,202 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[3:3] new[3:3]
2023-07-05 11:05:22,202 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[3:3] new[3:3]
2023-07-05 11:05:22,202 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[4:4] new[4:6]
2023-07-05 11:05:22,202 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 4 to 6 (to 5 in part parser)
2023-07-05 11:05:22,203 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:05:53,583 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:05:53,584 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 7
2023-07-05 11:05:53,584 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2023-07-05 11:05:53,585 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[2:4] new[1:4]
2023-07-05 11:05:53,586 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 5 to 6 (to 6 in part parser)
2023-07-05 11:05:53,587 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[6:6] new[6:7]
2023-07-05 11:05:53,588 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 7 to 7 (to 6 in part parser)
2023-07-05 11:05:53,588 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:06:13,574 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:06:13,575 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 8
2023-07-05 11:06:13,575 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2023-07-05 11:06:13,576 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[2:6] new[1:6]
2023-07-05 11:06:13,576 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[7:7] new[7:8]
2023-07-05 11:06:13,577 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2023-07-05 11:06:13,577 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:06:16,887 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:06:16,888 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2023-07-05 11:06:16,888 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2023-07-05 11:06:16,888 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[2:7] new[1:7]
2023-07-05 11:06:16,889 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2023-07-05 11:06:16,890 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 8 to 8 (to 7 in part parser)
2023-07-05 11:06:16,890 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:11:48,078 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:11:48,079 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 1
2023-07-05 11:11:48,079 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:8] new[1:1]
2023-07-05 11:11:48,080 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-07-05 11:11:48,081 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:12:13,719 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:12:13,719 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 8
2023-07-05 11:12:13,720 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:8]
2023-07-05 11:12:13,724 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 8 (to 7 in part parser)
2023-07-05 11:12:13,725 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:12:17,894 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:12:17,895 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2023-07-05 11:12:17,895 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2023-07-05 11:12:17,897 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:12:17,900 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 8 (to 7 in part parser)
2023-07-05 11:12:17,901 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2023-07-05 11:12:17,901 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:12:47,110 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:12:47,111 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2023-07-05 11:12:47,111 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2023-07-05 11:12:47,112 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:12:47,113 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 8 (to 7 in part parser)
2023-07-05 11:12:47,113 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2023-07-05 11:12:47,113 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:12:47,118 [7981] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/sklearn/metrics/_regression.py
2023-07-05 11:13:11,519 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:13:11,520 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 16
2023-07-05 11:13:11,520 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2023-07-05 11:13:11,521 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:13:11,523 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 16 (to 15 in part parser)
2023-07-05 11:13:11,523 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[8:8] new[8:16]
2023-07-05 11:13:11,523 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:13:16,638 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:13:16,639 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 16; new: 16
2023-07-05 11:13:16,639 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:15] new[1:15]
2023-07-05 11:13:16,640 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:13:16,642 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 16 (to 15 in part parser)
2023-07-05 11:13:16,642 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[16:16] new[16:16]
2023-07-05 11:13:16,643 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:13:23,390 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:13:23,391 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 16; new: 16
2023-07-05 11:13:23,391 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:15] new[1:15]
2023-07-05 11:13:23,392 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:13:23,394 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 16 (to 15 in part parser)
2023-07-05 11:13:23,395 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[16:16] new[16:16]
2023-07-05 11:13:23,395 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:13:27,638 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:13:27,639 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 16; new: 16
2023-07-05 11:13:27,639 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:15] new[1:15]
2023-07-05 11:13:27,640 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:13:27,642 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 16 (to 15 in part parser)
2023-07-05 11:13:27,642 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[16:16] new[16:16]
2023-07-05 11:13:27,643 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:13:56,720 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:13:56,721 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 16; new: 19
2023-07-05 11:13:56,721 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:15] new[1:15]
2023-07-05 11:13:56,722 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:13:56,724 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 19 (to 18 in part parser)
2023-07-05 11:13:56,725 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[16:16] new[16:19]
2023-07-05 11:13:56,725 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 11:13:58,710 [7981] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 11:13:58,711 [7981] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 19; new: 20
2023-07-05 11:13:58,712 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:18] new[1:18]
2023-07-05 11:13:58,712 [7981] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:2] new[1:2]
2023-07-05 11:13:58,717 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 3 to 19 (to 19 in part parser)
2023-07-05 11:13:58,717 [7981] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[19:19] new[19:20]
2023-07-05 11:13:58,717 [7981] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 20 to 20 (to 19 in part parser)
2023-07-05 11:13:58,717 [7981] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 12:29:28,544 [10651] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-05 12:29:28,544 [10651] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-05 12:29:28,544 [10651] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-05 12:29:28,545 [10651] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-05 12:29:28,546 [10651] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-05 12:29:28,546 [10651] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-05 17:48:43,211 [10651] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 17:48:43,212 [10651] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 17
2023-07-05 17:48:43,212 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:3] new[1:17]
2023-07-05 17:48:43,216 [10651] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 17 (to 16 in part parser)
2023-07-05 17:48:43,216 [10651] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 17:48:45,250 [10651] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-05 17:49:11,268 [10651] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 17:49:11,269 [10651] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 17; new: 17
2023-07-05 17:49:11,269 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:16] new[1:16]
2023-07-05 17:49:11,270 [10651] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:16] new[1:16]
2023-07-05 17:49:11,270 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[17:17] new[17:17]
2023-07-05 17:49:11,271 [10651] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 17 to 17 (to 16 in part parser)
2023-07-05 17:49:11,271 [10651] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 17:49:14,755 [10651] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 17:49:14,755 [10651] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 17; new: 17
2023-07-05 17:49:14,756 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:16] new[1:16]
2023-07-05 17:49:14,756 [10651] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:16] new[1:16]
2023-07-05 17:49:14,757 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[17:17] new[17:17]
2023-07-05 17:49:14,758 [10651] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 17 to 17 (to 16 in part parser)
2023-07-05 17:49:14,759 [10651] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 17:49:14,774 [10651] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/numpy/__init__.py
2023-07-05 17:49:14,831 [10651] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/numpy/__init__.pyi
2023-07-05 17:49:14,860 [10651] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /usr/lib/python3.9/typing.py
2023-07-05 17:49:14,866 [10651] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-07-05 17:49:14,872 [10651] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /usr/lib/python3.9/types.py
2023-07-05 17:49:14,891 [10651] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2023-07-05 17:49:26,623 [10651] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 17:49:26,623 [10651] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 17; new: 18
2023-07-05 17:49:26,623 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:16] new[1:16]
2023-07-05 17:49:26,623 [10651] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:16] new[1:16]
2023-07-05 17:49:26,623 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[17:17] new[17:18]
2023-07-05 17:49:26,623 [10651] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 17 to 18 (to 17 in part parser)
2023-07-05 17:49:26,623 [10651] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 17:49:52,587 [10651] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 17:49:52,589 [10651] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 18; new: 17
2023-07-05 17:49:52,589 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:16] new[1:16]
2023-07-05 17:49:52,590 [10651] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:16] new[1:16]
2023-07-05 17:49:52,590 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[17:18] new[17:17]
2023-07-05 17:49:52,591 [10651] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 17 to 17 (to 16 in part parser)
2023-07-05 17:49:52,591 [10651] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 17:49:56,555 [10651] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-05 17:49:56,557 [10651] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 17; new: 17
2023-07-05 17:49:56,557 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:16] new[1:16]
2023-07-05 17:49:56,558 [10651] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:16] new[1:16]
2023-07-05 17:49:56,558 [10651] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[17:17] new[17:17]
2023-07-05 17:49:56,559 [10651] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 17 to 17 (to 16 in part parser)
2023-07-05 17:49:56,560 [10651] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-05 17:50:55,945 [26598] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-05 17:50:55,946 [26598] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-05 17:50:55,946 [26598] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-05 17:50:55,947 [26598] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-05 17:50:55,948 [26598] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-05 17:50:55,948 [26598] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-07 11:27:30,696 [4187] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-07 11:27:30,696 [4187] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-07 11:27:30,696 [4187] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-07 11:27:30,698 [4187] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-07 11:27:30,698 [4187] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-07 11:27:30,698 [4187] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-07 11:56:14,264 [6175] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-07 11:56:14,264 [6175] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-07 11:56:14,264 [6175] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-07 11:56:14,265 [6175] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-07 11:56:14,265 [6175] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-07 11:56:14,266 [6175] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-08 16:45:03,061 [68650] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-08 16:45:03,061 [68650] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-08 16:45:03,061 [68650] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-08 16:45:03,062 [68650] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-08 16:45:03,063 [68650] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-08 16:45:03,063 [68650] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-08 17:58:19,370 [68650] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-07-08 17:58:19,390 [68650] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-07-08 17:58:55,861 [72025] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-08 17:58:55,861 [72025] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-08 17:58:55,862 [72025] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-08 17:58:55,863 [72025] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-08 17:58:55,863 [72025] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-08 17:58:55,863 [72025] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-08 18:00:09,911 [72025] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-07-08 18:00:09,931 [72025] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-07-08 18:00:37,850 [72025] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-08 18:00:37,850 [72025] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 5
2023-07-08 18:00:37,851 [72025] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2023-07-08 18:00:37,851 [72025] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:3] new[1:3]
2023-07-08 18:00:37,852 [72025] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[4:4] new[4:5]
2023-07-08 18:00:37,853 [72025] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 4 to 5 (to 4 in part parser)
2023-07-08 18:00:37,853 [72025] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-08 18:00:37,863 [72025] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/numpy/__init__.py
2023-07-08 18:00:37,903 [72025] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/numpy/__init__.pyi
2023-07-08 18:00:37,929 [72025] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /usr/lib/python3.9/typing.py
2023-07-08 18:00:37,937 [72025] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-07-08 18:09:10,657 [72025] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-08 18:09:10,657 [72025] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 1
2023-07-08 18:09:10,657 [72025] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:5] new[1:1]
2023-07-08 18:09:10,658 [72025] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-07-08 18:09:10,658 [72025] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-25 16:19:06,245 [38699] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-25 16:19:06,245 [38699] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-25 16:19:06,245 [38699] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-25 16:19:06,246 [38699] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-25 16:19:06,247 [38699] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-25 16:19:06,247 [38699] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-25 17:20:23,830 [41891] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-25 17:20:23,830 [41891] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-25 17:20:23,830 [41891] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-25 17:20:23,831 [41891] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-25 17:20:23,832 [41891] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-25 17:20:23,832 [41891] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-25 17:46:46,071 [43144] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-25 17:46:46,071 [43144] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-25 17:46:46,071 [43144] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-25 17:46:46,072 [43144] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-25 17:46:46,073 [43144] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-25 17:46:46,073 [43144] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 08:47:57,743 [6229] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 08:47:57,743 [6229] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 08:47:57,743 [6229] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 08:47:57,744 [6229] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 08:47:57,745 [6229] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 08:47:57,745 [6229] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 09:21:58,872 [8605] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 09:21:58,872 [8605] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 09:21:58,872 [8605] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 09:21:58,874 [8605] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 09:21:58,874 [8605] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 09:21:58,874 [8605] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 09:32:07,136 [9002] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 09:32:07,137 [9002] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 09:32:07,137 [9002] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 09:32:07,138 [9002] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 09:32:07,138 [9002] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 09:32:07,138 [9002] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 09:32:49,451 [9073] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 09:32:49,451 [9073] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 09:32:49,452 [9073] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 09:32:49,453 [9073] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 09:32:49,453 [9073] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 09:32:49,453 [9073] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 09:33:48,482 [9180] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 09:33:48,482 [9180] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 09:33:48,482 [9180] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 09:33:48,483 [9180] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 09:33:48,483 [9180] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 09:33:48,483 [9180] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 13:57:32,135 [22606] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 13:57:32,135 [22606] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 13:57:32,135 [22606] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 13:57:32,137 [22606] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 13:57:32,137 [22606] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 13:57:32,137 [22606] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 13:59:06,783 [22781] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 13:59:06,783 [22781] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 13:59:06,783 [22781] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 13:59:06,785 [22781] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 13:59:06,785 [22781] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 13:59:06,785 [22781] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 14:15:25,552 [24315] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 14:15:25,552 [24315] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 14:15:25,552 [24315] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 14:15:25,554 [24315] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 14:15:25,554 [24315] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 14:15:25,554 [24315] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 14:34:52,805 [24315] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/seaborn/__init__.py
2023-07-26 14:50:00,829 [24315] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-26 14:50:00,829 [24315] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 8
2023-07-26 14:50:00,829 [24315] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:4] new[1:8]
2023-07-26 14:50:00,830 [24315] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 8 (to 7 in part parser)
2023-07-26 14:50:00,830 [24315] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-26 14:50:02,990 [24315] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-07-26 14:50:02,991 [24315] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2023-07-26 14:50:02,991 [24315] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2023-07-26 14:50:02,991 [24315] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[2:5] new[1:5]
2023-07-26 14:50:02,992 [24315] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 6 to 8 (to 7 in part parser)
2023-07-26 14:50:02,993 [24315] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2023-07-26 14:50:02,993 [24315] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-07-26 14:52:58,702 [27605] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 14:52:58,702 [27605] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 14:52:58,702 [27605] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 14:52:58,704 [27605] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 14:52:58,704 [27605] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 14:52:58,704 [27605] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 14:58:08,840 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,854 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,866 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,877 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,887 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,898 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,908 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,918 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,928 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,939 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,950 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,960 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,971 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,983 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:08,993 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,003 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,013 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,024 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,034 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,045 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,055 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,065 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,075 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,085 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,095 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,105 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,115 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,125 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,136 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,146 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,156 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,167 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,180 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,192 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,204 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,214 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,224 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,235 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,245 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,255 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,265 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,275 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,285 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,295 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,305 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,315 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,327 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,337 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,347 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,357 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,366 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,376 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,386 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,395 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,405 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,416 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,426 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,436 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,446 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,456 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,465 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,475 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,485 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,495 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,506 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,516 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,525 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,535 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,545 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,555 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,565 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,575 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,725 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,731 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,736 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,742 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,747 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,753 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,758 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,764 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,769 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,776 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,782 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,788 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,793 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,799 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,805 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,811 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,817 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,823 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,830 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,835 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,842 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,848 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,853 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,859 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,865 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,871 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,877 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,883 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,889 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,895 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,901 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,907 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,913 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,919 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,924 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,930 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,937 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,943 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,948 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,954 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,960 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,966 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,972 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,977 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,983 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,989 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:09,995 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,001 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,006 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,012 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,018 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,023 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,029 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,034 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,041 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,046 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,052 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,057 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,063 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,068 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,074 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,080 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,085 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,091 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,097 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,103 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,108 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,114 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,119 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,125 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,130 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,136 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,550 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,556 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,561 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,566 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,572 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,577 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,583 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,588 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,594 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,600 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,605 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,611 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,616 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,621 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,627 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,632 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,638 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,643 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,649 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,655 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,660 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,665 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,671 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,676 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,682 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,687 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,694 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,700 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,706 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,712 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,717 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,723 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,729 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,734 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,740 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,746 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,752 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,759 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,764 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,770 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,776 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,782 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,787 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,794 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,799 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,806 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,812 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,817 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,823 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,829 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,834 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,840 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,846 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,851 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,858 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,863 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,869 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,875 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,881 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,886 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,892 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,897 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,903 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,910 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,915 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,921 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,927 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,932 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,938 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,944 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,949 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:10,955 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,070 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,080 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,086 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,093 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,099 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,105 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,112 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,118 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,125 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,131 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,140 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,146 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,152 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,159 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,165 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,172 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,178 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,185 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,191 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,199 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,206 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,212 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,219 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,225 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,231 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,238 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,244 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,250 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,259 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,265 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,272 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,278 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,284 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,291 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,297 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,304 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,310 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,319 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,326 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,332 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,339 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,345 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,351 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,358 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,364 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,370 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,379 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,385 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,392 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,398 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,404 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,411 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,417 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,424 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,430 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,439 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,445 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,452 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,458 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,464 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,470 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,477 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,483 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,489 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,498 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,504 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,511 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,518 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,524 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,531 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,537 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 14:58:11,543 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,702 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,708 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,713 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,719 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,729 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,735 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,740 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,745 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,755 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,760 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,766 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,771 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,830 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,836 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,841 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,846 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,852 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,857 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,863 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,868 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,874 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,879 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,884 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:01,889 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,187 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,197 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,208 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,218 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,228 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,243 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,251 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,261 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,271 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,285 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,296 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,304 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,385 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,389 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,394 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,410 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,420 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,429 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,439 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,449 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,461 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,468 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,478 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,487 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,499 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,509 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,515 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,595 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,600 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,605 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,624 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,632 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,642 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,651 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,660 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,669 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,677 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,689 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,698 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,708 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,719 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,727 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,795 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,798 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,802 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,818 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,823 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,829 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,835 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,841 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,847 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,852 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,858 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,864 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,870 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,875 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,881 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,926 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,929 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:02,932 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,017 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,023 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,028 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,033 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,039 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,045 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,050 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,055 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,061 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,066 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,072 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,077 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,121 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,123 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,126 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,141 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,151 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,161 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,171 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,180 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,193 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,199 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,209 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,219 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,231 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,241 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,247 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,321 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,324 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:03,329 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,341 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,347 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,353 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,359 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,369 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,375 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,381 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,387 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,397 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,403 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,409 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,415 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,476 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,482 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,487 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,492 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,498 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,504 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,509 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,515 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,521 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,527 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,532 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,537 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,941 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,950 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,959 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,967 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,975 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,988 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:34,995 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,003 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,011 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,021 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,031 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,038 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,107 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,110 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,114 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,128 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,133 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,138 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,143 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,149 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,154 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,159 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,164 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,170 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,175 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,180 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,185 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,238 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,241 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,244 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,344 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,350 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,356 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,363 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,375 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,386 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,396 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,404 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,411 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,417 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,424 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,429 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,472 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,475 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,477 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,493 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,503 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,513 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,523 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,533 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,544 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,551 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,560 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,570 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,583 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,593 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,600 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,676 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,679 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:02:35,685 [27605] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-07-26 15:03:05,232 [27605] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:03:05,275 [27605] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:03:13,511 [27605] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:03:13,552 [27605] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:03:37,928 [27605] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:03:53,545 [28338] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 15:03:53,545 [28338] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 15:03:53,545 [28338] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 15:03:53,546 [28338] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 15:03:53,547 [28338] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 15:03:53,547 [28338] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 15:09:51,766 [28960] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 15:09:51,766 [28960] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 15:09:51,766 [28960] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 15:09:51,768 [28960] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 15:09:51,768 [28960] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 15:09:51,768 [28960] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 15:13:29,032 [29228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 15:13:29,032 [29228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 15:13:29,033 [29228] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 15:13:29,034 [29228] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 15:13:29,034 [29228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 15:13:29,034 [29228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 15:15:52,426 [29361] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 15:15:52,426 [29361] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 15:15:52,426 [29361] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 15:15:52,428 [29361] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 15:15:52,428 [29361] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 15:15:52,428 [29361] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 15:18:39,944 [29361] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:19:01,080 [29361] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:19:12,135 [29361] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).
  warnings.warn(msg, FutureWarning)

2023-07-26 15:19:47,626 [29479] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 15:19:47,626 [29479] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 15:19:47,626 [29479] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 15:19:47,628 [29479] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 15:19:47,628 [29479] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 15:19:47,628 [29479] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 15:22:51,195 [29479] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-07-26 15:22:51,216 [29479] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/mahdi/.local/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-07-26 15:24:51,401 [29708] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 15:24:51,402 [29708] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 15:24:51,402 [29708] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 15:24:51,403 [29708] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 15:24:51,403 [29708] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 15:24:51,403 [29708] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 15:46:54,187 [30580] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 15:46:54,187 [30580] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 15:46:54,187 [30580] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 15:46:54,188 [30580] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 15:46:54,188 [30580] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 15:46:54,188 [30580] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:00:38,743 [30580] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0.
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-07-26 16:00:38,744 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,745 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mandali' (Mandali-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Peddana' (Peddana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaviPrakash' (RaviPrakash.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,746 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Syamala Ramana' (SyamalaRamana.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LakkiReddy' (LakkiReddy.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,747 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,748 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mallanna' (mallanna.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-07-26 16:00:38,749 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,750 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ramabhadra' (ramabhadra.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Potti Sreeramulu' (PottiSreeramulu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'NATS' (NATS.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,751 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gurajada' (Gurajada.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,752 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ponnala' (Ponnala.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suranna' (suranna.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'TenaliRamakrishna' (TenaliRamakrishna-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,753 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gidugu' (Gidugu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sree Krushnadevaraya' (SreeKrushnadevaraya.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'NTR' (NTR.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-07-26 16:00:38,754 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,755 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dhurjati' (dhurjati.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suravaram' (Suravaram.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,756 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Timmana' (TimmanaRegular.ttf) normal normal 900 normal>) = 10.525
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ramaraja' (Ramaraja-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,757 [30580] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0 to DejaVu Sans ('/home/mahdi/.local/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,760 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mandali' (Mandali-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,761 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Peddana' (Peddana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaviPrakash' (RaviPrakash.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,762 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Syamala Ramana' (SyamalaRamana.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LakkiReddy' (LakkiReddy.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,763 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,764 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mallanna' (mallanna.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,765 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ramabhadra' (ramabhadra.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,766 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Potti Sreeramulu' (PottiSreeramulu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'NATS' (NATS.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,767 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gurajada' (Gurajada.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,768 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ponnala' (Ponnala.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suranna' (suranna.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'TenaliRamakrishna' (TenaliRamakrishna-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gidugu' (Gidugu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sree Krushnadevaraya' (SreeKrushnadevaraya.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,769 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'NTR' (NTR.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-07-26 16:00:38,770 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-07-26 16:00:38,771 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dhurjati' (dhurjati.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suravaram' (Suravaram.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Timmana' (TimmanaRegular.ttf) normal normal 900 normal>) = 10.525
2023-07-26 16:00:38,772 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ramaraja' (Ramaraja-Regular.ttf) normal normal 400 normal>) = 10.05
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-07-26 16:00:38,773 [30580] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/mahdi/.local/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
2023-07-26 16:02:35,369 [31444] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:02:35,369 [31444] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:02:35,369 [31444] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:02:35,371 [31444] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:02:35,371 [31444] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:02:35,371 [31444] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:04:14,619 [31444] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/pandas/core/arraylike.py:364: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)

2023-07-26 16:04:26,998 [31444] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/pandas/core/arraylike.py:364: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)

2023-07-26 16:04:26,999 [31444] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/pandas/core/arraylike.py:364: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)

2023-07-26 16:04:27,017 [31444] WARNING  py.warnings:109: [JupyterRequire] /home/mahdi/.local/lib/python3.9/site-packages/numpy/lib/histograms.py:906: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges

2023-07-26 16:04:42,586 [31554] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:04:42,586 [31554] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:04:42,586 [31554] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:04:42,587 [31554] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:04:42,588 [31554] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:04:42,588 [31554] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:12:26,476 [31849] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:12:26,476 [31849] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:12:26,476 [31849] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:12:26,478 [31849] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:12:26,478 [31849] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:12:26,478 [31849] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:13:58,479 [31959] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:13:58,479 [31959] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:13:58,479 [31959] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:13:58,481 [31959] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:13:58,481 [31959] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:13:58,481 [31959] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:21:34,399 [32259] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:21:34,399 [32259] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:21:34,399 [32259] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:21:34,400 [32259] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:21:34,401 [32259] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:21:34,401 [32259] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:27:22,455 [32677] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:27:22,455 [32677] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:27:22,455 [32677] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:27:22,456 [32677] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:27:22,456 [32677] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:27:22,456 [32677] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:29:24,821 [32764] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:29:24,821 [32764] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:29:24,822 [32764] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:29:24,823 [32764] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:29:24,823 [32764] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:29:24,823 [32764] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:30:12,835 [32817] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:30:12,835 [32817] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:30:12,835 [32817] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:30:12,836 [32817] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:30:12,836 [32817] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:30:12,836 [32817] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:31:23,589 [32923] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:31:23,589 [32923] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:31:23,589 [32923] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:31:23,590 [32923] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:31:23,591 [32923] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:31:23,591 [32923] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:32:30,053 [32991] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:32:30,053 [32991] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:32:30,053 [32991] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:32:30,054 [32991] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:32:30,054 [32991] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:32:30,054 [32991] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:33:19,261 [33040] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:33:19,261 [33040] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:33:19,261 [33040] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:33:19,263 [33040] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:33:19,263 [33040] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:33:19,263 [33040] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:49:42,248 [33850] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:49:42,248 [33850] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:49:42,248 [33850] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:49:42,249 [33850] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:49:42,249 [33850] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:49:42,249 [33850] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 16:58:49,824 [34259] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 16:58:49,824 [34259] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 16:58:49,824 [34259] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 16:58:49,825 [34259] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 16:58:49,825 [34259] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 16:58:49,826 [34259] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 17:01:03,224 [34450] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 17:01:03,224 [34450] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 17:01:03,224 [34450] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 17:01:03,225 [34450] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 17:01:03,225 [34450] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 17:01:03,225 [34450] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 17:23:05,355 [35368] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 17:23:05,355 [35368] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 17:23:05,355 [35368] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 17:23:05,356 [35368] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 17:23:05,356 [35368] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 17:23:05,356 [35368] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 17:25:12,554 [35487] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 17:25:12,554 [35487] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 17:25:12,554 [35487] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 17:25:12,555 [35487] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 17:25:12,556 [35487] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 17:25:12,556 [35487] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 18:12:31,934 [37223] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 18:12:31,934 [37223] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 18:12:31,934 [37223] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 18:12:31,935 [37223] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 18:12:31,935 [37223] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 18:12:31,936 [37223] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-07-26 18:14:31,891 [37330] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-07-26 18:14:31,891 [37330] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-07-26 18:14:31,891 [37330] INFO     root:247: [JupyterRequire] Initializing comms.
2023-07-26 18:14:31,892 [37330] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-07-26 18:14:31,893 [37330] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-07-26 18:14:31,893 [37330] DEBUG    root:97: [JupyterRequire] Registering comm targets.
